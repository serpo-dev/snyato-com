{"ast":null,"code":"import chats from './redux/data/inboxItems.json';\nconst ONE_BY_ONE_CHARACHTERS_ENTERING = 'ONE-BY-ONE-CHARACHTERS-ENTERING';\nconst ADD_NEW_MESSAGE = 'ADD-NEW-MESSAGE';\nexport let oneByOneCharachtersEnteringActionCreator = desiredValue => ({\n  type: ONE_BY_ONE_CHARACHTERS_ENTERING,\n  desiredValue: desiredValue\n});\nexport let addNewMessageActionCreator = desiredValue => ({\n  type: add,\n  desiredValue: desiredValue\n});\nexport let store = {\n  _state: {\n    Inbox: {\n      InboxItems: chats,\n      InboxMessages: [{\n        id: \"1\",\n        text: \"- It's not easy to live your own way.\"\n      }, {\n        id: \"2\",\n        text: \"Because you can't blame anybody but yourself.\"\n      }, {\n        id: \"3\",\n        text: \"- I don't want to be a burden! I want to be useful.\"\n      }]\n    }\n  },\n  currentValueOfTextArea: `Write the thoughts you've always wanted to say...`,\n\n  _reloadApp() {},\n\n  subscriber(observer) {\n    this._reloadApp = observer;\n  },\n\n  getState() {\n    return this._state;\n  },\n\n  getDefaultText() {\n    return this.currentValueOfTextArea;\n  },\n\n  dispatch(action) {\n    if (action.type === 'ONE-BY-ONE-CHARACHTERS-ENTERING') {\n      this.currentValueOfTextArea = action.desiredValue;\n\n      this._reloadApp(this._state);\n    } else if (action.type === 'ADD-NEW-MESSAGE') {\n      let count = this._state.Inbox.InboxMessages.length;\n      this._state.Inbox.InboxMessages[count] = {\n        id: `${count + 1}`,\n        text: `${action.desiredValue}`\n      };\n      this.currentValueOfTextArea = '';\n\n      this._reloadApp(this._state);\n    }\n  }\n\n};","map":{"version":3,"names":["chats","ONE_BY_ONE_CHARACHTERS_ENTERING","ADD_NEW_MESSAGE","oneByOneCharachtersEnteringActionCreator","desiredValue","type","addNewMessageActionCreator","add","store","_state","Inbox","InboxItems","InboxMessages","id","text","currentValueOfTextArea","_reloadApp","subscriber","observer","getState","getDefaultText","dispatch","action","count","length"],"sources":["/home/sergey/Documents/live-catcher/src/state.js"],"sourcesContent":["import chats from './redux/data/inboxItems.json';\n\nconst ONE_BY_ONE_CHARACHTERS_ENTERING = 'ONE-BY-ONE-CHARACHTERS-ENTERING';\nconst ADD_NEW_MESSAGE = 'ADD-NEW-MESSAGE'\n\n\nexport let oneByOneCharachtersEnteringActionCreator = (desiredValue) => ({ type: ONE_BY_ONE_CHARACHTERS_ENTERING, desiredValue: desiredValue })\nexport let addNewMessageActionCreator = (desiredValue) => ({ type: add, desiredValue: desiredValue })\n\nexport let store = {\n    _state: {\n        Inbox: {\n            InboxItems: chats,\n            InboxMessages: [\n                {\n                    id: \"1\",\n                    text: \"- It's not easy to live your own way.\"\n                },\n                {\n                    id: \"2\",\n                    text: \"Because you can't blame anybody but yourself.\"\n                },\n                {\n                    id: \"3\",\n                    text: \"- I don't want to be a burden! I want to be useful.\"\n                }\n            ]\n        }\n    },\n    currentValueOfTextArea: `Write the thoughts you've always wanted to say...`,\n    _reloadApp() { },\n    subscriber(observer) {\n        this._reloadApp = observer;\n    },\n    getState() {\n        return this._state;\n    },\n    getDefaultText() {\n        return this.currentValueOfTextArea;\n    },\n    dispatch(action) {\n        if (action.type === 'ONE-BY-ONE-CHARACHTERS-ENTERING') {\n            this.currentValueOfTextArea = action.desiredValue;\n            this._reloadApp(this._state);\n        } else if (action.type === 'ADD-NEW-MESSAGE') {\n            let count = this._state.Inbox.InboxMessages.length;\n            this._state.Inbox.InboxMessages[count] =\n            {\n                id: `${count + 1}`,\n                text: `${action.desiredValue}`\n            };\n            this.currentValueOfTextArea = '';\n            this._reloadApp(this._state);\n        }\n    }\n}"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,8BAAlB;AAEA,MAAMC,+BAA+B,GAAG,iCAAxC;AACA,MAAMC,eAAe,GAAG,iBAAxB;AAGA,OAAO,IAAIC,wCAAwC,GAAIC,YAAD,KAAmB;EAAEC,IAAI,EAAEJ,+BAAR;EAAyCG,YAAY,EAAEA;AAAvD,CAAnB,CAA/C;AACP,OAAO,IAAIE,0BAA0B,GAAIF,YAAD,KAAmB;EAAEC,IAAI,EAAEE,GAAR;EAAaH,YAAY,EAAEA;AAA3B,CAAnB,CAAjC;AAEP,OAAO,IAAII,KAAK,GAAG;EACfC,MAAM,EAAE;IACJC,KAAK,EAAE;MACHC,UAAU,EAAEX,KADT;MAEHY,aAAa,EAAE,CACX;QACIC,EAAE,EAAE,GADR;QAEIC,IAAI,EAAE;MAFV,CADW,EAKX;QACID,EAAE,EAAE,GADR;QAEIC,IAAI,EAAE;MAFV,CALW,EASX;QACID,EAAE,EAAE,GADR;QAEIC,IAAI,EAAE;MAFV,CATW;IAFZ;EADH,CADO;EAoBfC,sBAAsB,EAAG,mDApBV;;EAqBfC,UAAU,GAAG,CAAG,CArBD;;EAsBfC,UAAU,CAACC,QAAD,EAAW;IACjB,KAAKF,UAAL,GAAkBE,QAAlB;EACH,CAxBc;;EAyBfC,QAAQ,GAAG;IACP,OAAO,KAAKV,MAAZ;EACH,CA3Bc;;EA4BfW,cAAc,GAAG;IACb,OAAO,KAAKL,sBAAZ;EACH,CA9Bc;;EA+BfM,QAAQ,CAACC,MAAD,EAAS;IACb,IAAIA,MAAM,CAACjB,IAAP,KAAgB,iCAApB,EAAuD;MACnD,KAAKU,sBAAL,GAA8BO,MAAM,CAAClB,YAArC;;MACA,KAAKY,UAAL,CAAgB,KAAKP,MAArB;IACH,CAHD,MAGO,IAAIa,MAAM,CAACjB,IAAP,KAAgB,iBAApB,EAAuC;MAC1C,IAAIkB,KAAK,GAAG,KAAKd,MAAL,CAAYC,KAAZ,CAAkBE,aAAlB,CAAgCY,MAA5C;MACA,KAAKf,MAAL,CAAYC,KAAZ,CAAkBE,aAAlB,CAAgCW,KAAhC,IACA;QACIV,EAAE,EAAG,GAAEU,KAAK,GAAG,CAAE,EADrB;QAEIT,IAAI,EAAG,GAAEQ,MAAM,CAAClB,YAAa;MAFjC,CADA;MAKA,KAAKW,sBAAL,GAA8B,EAA9B;;MACA,KAAKC,UAAL,CAAgB,KAAKP,MAArB;IACH;EACJ;;AA7Cc,CAAZ"},"metadata":{},"sourceType":"module"}