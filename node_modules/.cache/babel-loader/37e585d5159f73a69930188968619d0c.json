{"ast":null,"code":"const ADD_NEW_POST = 'ADD-NEW-POST';\nconst ONE_BY_ONE_CHARACHTERS_ENTERING = 'ONE-BY-ONE-CHARACHTERS-ENTERING';\nconst initialState = {\n  posts: [{\n    id: 1,\n    text: `Hey, world! I use a LC to save a moments dear to my heart.`,\n    comments: [{\n      id: 1,\n      text: `Wow, it's so cool, dude. `\n    }, {\n      id: 2,\n      text: `Good luck!`\n    }]\n  }],\n  currentValueOfTextArea: ''\n};\nexport const ProfileReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ONE_BY_ONE_CHARACHTERS_ENTERING:\n      {\n        let stateCopy = { ...state\n        };\n        stateCopy.currentValueOfTextArea = { ...state.currentValueOfTextArea\n        };\n        stateCopy.currentValueOfTextArea = action.desiredValue;\n        return stateCopy;\n      }\n\n    case ADD_NEW_POST:\n      {\n        let count = state.posts.length;\n        let item = {\n          id: count,\n          text: action.desiredValue,\n          comments: []\n        };\n        let stateCopy = { ...state\n        };\n        stateCopy.posts = [...state.posts];\n        stateCopy.posts.push(item);\n        stateCopy.currentValueOfTextArea = { ...state.currentValueOfTextArea\n        };\n        stateCopy.currentValueOfTextArea = '';\n        return stateCopy;\n      }\n\n    default:\n      return state;\n  }\n};\n_c = ProfileReducer;\nexport const addNewPostActionCreator = () => ({\n  type: ADD_NEW_POST\n});\nexport const oneByOneCharachtersEnteringActionCreator = desiredValue => ({\n  type: ONE_BY_ONE_CHARACHTERS_ENTERING,\n  desiredValue: desiredValue\n});\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileReducer\");","map":{"version":3,"names":["ADD_NEW_POST","ONE_BY_ONE_CHARACHTERS_ENTERING","initialState","posts","id","text","comments","currentValueOfTextArea","ProfileReducer","state","action","type","stateCopy","desiredValue","count","length","item","push","addNewPostActionCreator","oneByOneCharachtersEnteringActionCreator"],"sources":["/home/sergey/Documents/live-catcher/src/redux/ProfileReducer.js"],"sourcesContent":["const ADD_NEW_POST = 'ADD-NEW-POST';\nconst ONE_BY_ONE_CHARACHTERS_ENTERING = 'ONE-BY-ONE-CHARACHTERS-ENTERING';\n\nconst initialState = {\n    posts: [\n        {\n            id: 1,\n            text: `Hey, world! I use a LC to save a moments dear to my heart.`,\n            comments: [\n                {\n                    id: 1,\n                    text: `Wow, it's so cool, dude. `\n                },\n                {\n                    id: 2,\n                    text: `Good luck!`\n                }\n            ]\n        }\n    ],\n    currentValueOfTextArea: ''\n}\n\nexport const ProfileReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ONE_BY_ONE_CHARACHTERS_ENTERING:\n            {\n                let stateCopy = { ...state };\n                stateCopy.currentValueOfTextArea = { ...state.currentValueOfTextArea }\n                stateCopy.currentValueOfTextArea = action.desiredValue;\n                return stateCopy;\n            }\n        case ADD_NEW_POST:\n            {\n                let count = state.posts.length;\n                let item = {\n                    id: count,\n                    text: action.desiredValue,\n                    comments: []\n                }\n                let stateCopy = { ...state };\n                stateCopy.posts = [...state.posts];\n                stateCopy.posts.push(item);\n                stateCopy.currentValueOfTextArea = { ...state.currentValueOfTextArea }\n                stateCopy.currentValueOfTextArea = '';\n                return stateCopy;\n            }\n        default:\n            return state;\n    }\n}\n\nexport const addNewPostActionCreator = () => ({ type: ADD_NEW_POST })\nexport const oneByOneCharachtersEnteringActionCreator = (desiredValue) => ({ type: ONE_BY_ONE_CHARACHTERS_ENTERING, desiredValue: desiredValue })"],"mappings":"AAAA,MAAMA,YAAY,GAAG,cAArB;AACA,MAAMC,+BAA+B,GAAG,iCAAxC;AAEA,MAAMC,YAAY,GAAG;EACjBC,KAAK,EAAE,CACH;IACIC,EAAE,EAAE,CADR;IAEIC,IAAI,EAAG,4DAFX;IAGIC,QAAQ,EAAE,CACN;MACIF,EAAE,EAAE,CADR;MAEIC,IAAI,EAAG;IAFX,CADM,EAKN;MACID,EAAE,EAAE,CADR;MAEIC,IAAI,EAAG;IAFX,CALM;EAHd,CADG,CADU;EAiBjBE,sBAAsB,EAAE;AAjBP,CAArB;AAoBA,OAAO,MAAMC,cAAc,GAAG,YAAkC;EAAA,IAAjCC,KAAiC,uEAAzBP,YAAyB;EAAA,IAAXQ,MAAW;;EAC5D,QAAQA,MAAM,CAACC,IAAf;IACI,KAAKV,+BAAL;MACI;QACI,IAAIW,SAAS,GAAG,EAAE,GAAGH;QAAL,CAAhB;QACAG,SAAS,CAACL,sBAAV,GAAmC,EAAE,GAAGE,KAAK,CAACF;QAAX,CAAnC;QACAK,SAAS,CAACL,sBAAV,GAAmCG,MAAM,CAACG,YAA1C;QACA,OAAOD,SAAP;MACH;;IACL,KAAKZ,YAAL;MACI;QACI,IAAIc,KAAK,GAAGL,KAAK,CAACN,KAAN,CAAYY,MAAxB;QACA,IAAIC,IAAI,GAAG;UACPZ,EAAE,EAAEU,KADG;UAEPT,IAAI,EAAEK,MAAM,CAACG,YAFN;UAGPP,QAAQ,EAAE;QAHH,CAAX;QAKA,IAAIM,SAAS,GAAG,EAAE,GAAGH;QAAL,CAAhB;QACAG,SAAS,CAACT,KAAV,GAAkB,CAAC,GAAGM,KAAK,CAACN,KAAV,CAAlB;QACAS,SAAS,CAACT,KAAV,CAAgBc,IAAhB,CAAqBD,IAArB;QACAJ,SAAS,CAACL,sBAAV,GAAmC,EAAE,GAAGE,KAAK,CAACF;QAAX,CAAnC;QACAK,SAAS,CAACL,sBAAV,GAAmC,EAAnC;QACA,OAAOK,SAAP;MACH;;IACL;MACI,OAAOH,KAAP;EAxBR;AA0BH,CA3BM;KAAMD,c;AA6Bb,OAAO,MAAMU,uBAAuB,GAAG,OAAO;EAAEP,IAAI,EAAEX;AAAR,CAAP,CAAhC;AACP,OAAO,MAAMmB,wCAAwC,GAAIN,YAAD,KAAmB;EAAEF,IAAI,EAAEV,+BAAR;EAAyCY,YAAY,EAAEA;AAAvD,CAAnB,CAAjD"},"metadata":{},"sourceType":"module"}