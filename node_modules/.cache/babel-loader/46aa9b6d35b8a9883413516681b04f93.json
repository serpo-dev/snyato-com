{"ast":null,"code":"import chats from './redux/data/inboxItems.json';\nlet stack = {\n  state: {\n    Inbox: {\n      InboxItems: chats,\n      InboxMessages: [{\n        id: \"1\",\n        text: \"- It's not easy to live your own way.\"\n      }, {\n        id: \"2\",\n        text: \"Because you can't blame anybody but yourself.\"\n      }, {\n        id: \"3\",\n        text: \"- I don't want to be a burden! I want to be useful.\"\n      }]\n    }\n  },\n  defaultText: 'Write here what you want to say...',\n\n  linkPair(observer) {\n    Reload = observer;\n  }\n\n}; // add message from the Inbox to the state database\n\nexport let addMessage = message => {\n  let count = state.Inbox.InboxMessages.length;\n  state.Inbox.InboxMessages[count] = {\n    id: `${count + 1}`,\n    text: `${message}`\n  };\n  defaultText = '';\n  Reload(state);\n};\nexport let singleCharacterEnter = updatedString => {\n  defaultText = updatedString;\n  Reload(state);\n};\n\nlet Reload = () => {};\n\n_c = Reload;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reload\");","map":{"version":3,"names":["chats","stack","state","Inbox","InboxItems","InboxMessages","id","text","defaultText","linkPair","observer","Reload","addMessage","message","count","length","singleCharacterEnter","updatedString"],"sources":["/home/sergey/Documents/live-catcher/src/state.js"],"sourcesContent":["import chats from './redux/data/inboxItems.json';\n\n\nlet stack = {\n    state: {\n        Inbox: {\n            InboxItems: chats,\n            InboxMessages: [\n                {\n                    id: \"1\",\n                    text: \"- It's not easy to live your own way.\"\n                },\n                {\n                    id: \"2\",\n                    text: \"Because you can't blame anybody but yourself.\"\n                },\n                {\n                    id: \"3\",\n                    text: \"- I don't want to be a burden! I want to be useful.\"\n                }\n            ]\n        }\n    },\n    defaultText: 'Write here what you want to say...',\n    linkPair(observer) {\n        Reload = observer;\n    },\n\n}\n\n// add message from the Inbox to the state database\n\nexport let addMessage = (message) => {\n    let count = state.Inbox.InboxMessages.length;\n    state.Inbox.InboxMessages[count] = { id: `${count + 1}`, text: `${message}` };\n    defaultText = '';\n    Reload(state);\n}\n\nexport let singleCharacterEnter = (updatedString) => {\n    defaultText = updatedString;\n    Reload(state);\n}\n\nlet Reload = () => { }"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,8BAAlB;AAGA,IAAIC,KAAK,GAAG;EACRC,KAAK,EAAE;IACHC,KAAK,EAAE;MACHC,UAAU,EAAEJ,KADT;MAEHK,aAAa,EAAE,CACX;QACIC,EAAE,EAAE,GADR;QAEIC,IAAI,EAAE;MAFV,CADW,EAKX;QACID,EAAE,EAAE,GADR;QAEIC,IAAI,EAAE;MAFV,CALW,EASX;QACID,EAAE,EAAE,GADR;QAEIC,IAAI,EAAE;MAFV,CATW;IAFZ;EADJ,CADC;EAoBRC,WAAW,EAAE,oCApBL;;EAqBRC,QAAQ,CAACC,QAAD,EAAW;IACfC,MAAM,GAAGD,QAAT;EACH;;AAvBO,CAAZ,C,CA2BA;;AAEA,OAAO,IAAIE,UAAU,GAAIC,OAAD,IAAa;EACjC,IAAIC,KAAK,GAAGZ,KAAK,CAACC,KAAN,CAAYE,aAAZ,CAA0BU,MAAtC;EACAb,KAAK,CAACC,KAAN,CAAYE,aAAZ,CAA0BS,KAA1B,IAAmC;IAAER,EAAE,EAAG,GAAEQ,KAAK,GAAG,CAAE,EAAnB;IAAsBP,IAAI,EAAG,GAAEM,OAAQ;EAAvC,CAAnC;EACAL,WAAW,GAAG,EAAd;EACAG,MAAM,CAACT,KAAD,CAAN;AACH,CALM;AAOP,OAAO,IAAIc,oBAAoB,GAAIC,aAAD,IAAmB;EACjDT,WAAW,GAAGS,aAAd;EACAN,MAAM,CAACT,KAAD,CAAN;AACH,CAHM;;AAKP,IAAIS,MAAM,GAAG,MAAM,CAAG,CAAtB;;KAAIA,M"},"metadata":{},"sourceType":"module"}