{"ast":null,"code":"import chats from './data/inboxItems.json';\nconst ONE_BY_ONE_CHARACHTERS_ENTERING = 'ONE-BY-ONE-CHARACHTERS-ENTERING';\nconst ADD_NEW_MESSAGE = 'ADD-NEW-MESSAGE';\nconst initialState = {\n  users: chats,\n  messages: [{\n    id: 1,\n    text: \"- It's not easy to live your own way.\"\n  }, {\n    id: 2,\n    text: \"Because you can't blame anybody but yourself.\"\n  }, {\n    id: 3,\n    text: \"- I don't want to be a burden! I want to be useful.\"\n  }],\n  currentValueOfTextArea: ''\n};\nexport let InboxReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ONE_BY_ONE_CHARACHTERS_ENTERING:\n      {\n        const stateCopy = { ...state\n        };\n        stateCopy.currentValueOfTextArea = action.desiredValue;\n        return stateCopy;\n      }\n\n    case ADD_NEW_MESSAGE:\n      {\n        let count = state.messages.length;\n        let item = {\n          id: count + 1,\n          text: action.desiredValue\n        };\n        const stateCopy = { ...state\n        };\n        stateCopy.messages = [...state.messages];\n        stateCopy.messages.push(item);\n        stateCopy.currentValueOfTextArea = '';\n        return stateCopy;\n      }\n\n    default:\n      return state;\n  }\n};\n_c = InboxReducer;\nexport let addNewMessageActionCreator = () => ({\n  type: ADD_NEW_MESSAGE\n});\nexport let oneByOneCharachtersEnteringActionCreator = desiredValue => ({\n  type: ONE_BY_ONE_CHARACHTERS_ENTERING,\n  desiredValue: desiredValue\n});\n\nvar _c;\n\n$RefreshReg$(_c, \"InboxReducer\");","map":{"version":3,"names":["chats","ONE_BY_ONE_CHARACHTERS_ENTERING","ADD_NEW_MESSAGE","initialState","users","messages","id","text","currentValueOfTextArea","InboxReducer","state","action","type","stateCopy","desiredValue","count","length","item","push","addNewMessageActionCreator","oneByOneCharachtersEnteringActionCreator"],"sources":["/home/sergey/Documents/live-catcher/src/redux/InboxReducer.js"],"sourcesContent":["import chats from './data/inboxItems.json';\n\n\n\nconst ONE_BY_ONE_CHARACHTERS_ENTERING = 'ONE-BY-ONE-CHARACHTERS-ENTERING';\nconst ADD_NEW_MESSAGE = 'ADD-NEW-MESSAGE';\n\nconst initialState = {\n    users: chats,\n    messages: [\n        {\n            id: 1,\n            text: \"- It's not easy to live your own way.\"\n        },\n        {\n            id: 2,\n            text: \"Because you can't blame anybody but yourself.\"\n        },\n        {\n            id: 3,\n            text: \"- I don't want to be a burden! I want to be useful.\"\n        }\n    ],\n    currentValueOfTextArea: ''\n}\n\nexport let InboxReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ONE_BY_ONE_CHARACHTERS_ENTERING:\n            {\n                const stateCopy = { ...state };\n                stateCopy.currentValueOfTextArea = action.desiredValue;\n                return stateCopy;\n            }\n        case ADD_NEW_MESSAGE:\n            {\n                let count = state.messages.length;\n                let item = {\n                    id: count + 1,\n                    text: action.desiredValue\n                };\n                const stateCopy = { ...state };\n                stateCopy.messages = [...state.messages];\n                stateCopy.messages.push(item);\n                stateCopy.currentValueOfTextArea = '';\n                return stateCopy;\n            }\n        default:\n            return state;\n    }\n}\n\n\nexport let addNewMessageActionCreator = () => ({ type: ADD_NEW_MESSAGE })\nexport let oneByOneCharachtersEnteringActionCreator = (desiredValue) => ({ type: ONE_BY_ONE_CHARACHTERS_ENTERING, desiredValue: desiredValue })"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,wBAAlB;AAIA,MAAMC,+BAA+B,GAAG,iCAAxC;AACA,MAAMC,eAAe,GAAG,iBAAxB;AAEA,MAAMC,YAAY,GAAG;EACjBC,KAAK,EAAEJ,KADU;EAEjBK,QAAQ,EAAE,CACN;IACIC,EAAE,EAAE,CADR;IAEIC,IAAI,EAAE;EAFV,CADM,EAKN;IACID,EAAE,EAAE,CADR;IAEIC,IAAI,EAAE;EAFV,CALM,EASN;IACID,EAAE,EAAE,CADR;IAEIC,IAAI,EAAE;EAFV,CATM,CAFO;EAgBjBC,sBAAsB,EAAE;AAhBP,CAArB;AAmBA,OAAO,IAAIC,YAAY,GAAG,YAAkC;EAAA,IAAjCC,KAAiC,uEAAzBP,YAAyB;EAAA,IAAXQ,MAAW;;EACxD,QAAQA,MAAM,CAACC,IAAf;IACI,KAAKX,+BAAL;MACI;QACI,MAAMY,SAAS,GAAG,EAAE,GAAGH;QAAL,CAAlB;QACAG,SAAS,CAACL,sBAAV,GAAmCG,MAAM,CAACG,YAA1C;QACA,OAAOD,SAAP;MACH;;IACL,KAAKX,eAAL;MACI;QACI,IAAIa,KAAK,GAAGL,KAAK,CAACL,QAAN,CAAeW,MAA3B;QACA,IAAIC,IAAI,GAAG;UACPX,EAAE,EAAES,KAAK,GAAG,CADL;UAEPR,IAAI,EAAEI,MAAM,CAACG;QAFN,CAAX;QAIA,MAAMD,SAAS,GAAG,EAAE,GAAGH;QAAL,CAAlB;QACAG,SAAS,CAACR,QAAV,GAAqB,CAAC,GAAGK,KAAK,CAACL,QAAV,CAArB;QACAQ,SAAS,CAACR,QAAV,CAAmBa,IAAnB,CAAwBD,IAAxB;QACAJ,SAAS,CAACL,sBAAV,GAAmC,EAAnC;QACA,OAAOK,SAAP;MACH;;IACL;MACI,OAAOH,KAAP;EArBR;AAuBH,CAxBM;KAAID,Y;AA2BX,OAAO,IAAIU,0BAA0B,GAAG,OAAO;EAAEP,IAAI,EAAEV;AAAR,CAAP,CAAjC;AACP,OAAO,IAAIkB,wCAAwC,GAAIN,YAAD,KAAmB;EAAEF,IAAI,EAAEX,+BAAR;EAAyCa,YAAY,EAAEA;AAAvD,CAAnB,CAA/C"},"metadata":{},"sourceType":"module"}