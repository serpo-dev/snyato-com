{"ast":null,"code":"const ADD_NEW_POST = 'ADD-NEW-POST';\nconst ONE_BY_ONE_CHARACHTERS_ENTERING = 'ONE-BY-ONE-CHARACHTERS-ENTERING';\nconst initialState = {\n  posts: [],\n  currentValueOfTextArea: ''\n};\nexport const ProfileReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ONE_BY_ONE_CHARACHTERS_ENTERING:\n      return { ...state,\n        currentValueOfTextArea: action.desiredValue\n      };\n\n    case ADD_NEW_POST:\n      let count = state.posts.length;\n      let item = {\n        id: count,\n        text: state.currentValueOfTextArea,\n        comments: []\n      };\n      return { ...state,\n        posts: [...state.posts, item],\n        currentValueOfTextArea: ''\n      };\n\n    case SET_POSTS:\n      return { ...state,\n        posts: [].c\n      };\n\n    default:\n      return state;\n  }\n};\n_c = ProfileReducer;\nexport const addNewPostActionCreator = () => ({\n  type: ADD_NEW_POST\n});\nexport const oneByOneCharachtersEnteringActionCreator = desiredValue => ({\n  type: ONE_BY_ONE_CHARACHTERS_ENTERING,\n  desiredValue: desiredValue\n});\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileReducer\");","map":{"version":3,"names":["ADD_NEW_POST","ONE_BY_ONE_CHARACHTERS_ENTERING","initialState","posts","currentValueOfTextArea","ProfileReducer","state","action","type","desiredValue","count","length","item","id","text","comments","SET_POSTS","c","addNewPostActionCreator","oneByOneCharachtersEnteringActionCreator"],"sources":["/home/sergey/Documents/live-catcher/src/redux/ProfileReducer.js"],"sourcesContent":["const ADD_NEW_POST = 'ADD-NEW-POST';\nconst ONE_BY_ONE_CHARACHTERS_ENTERING = 'ONE-BY-ONE-CHARACHTERS-ENTERING';\n\nconst initialState = {\n    posts: [],\n    currentValueOfTextArea: ''\n};\n\n\nexport const ProfileReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ONE_BY_ONE_CHARACHTERS_ENTERING:\n            return {\n                ...state,\n                currentValueOfTextArea: action.desiredValue\n            }\n        case ADD_NEW_POST:\n            let count = state.posts.length;\n            let item = {\n                id: count,\n                text: state.currentValueOfTextArea,\n                comments: []\n            }\n            return {\n                ...state,\n                posts: [...state.posts, item],\n                currentValueOfTextArea: ''\n            }\n            case SET_POSTS:\n                return {\n                    ...state,\n                    posts: [].c\n                }\n        default:\n            return state;\n    }\n}\n\nexport const addNewPostActionCreator = () => ({ type: ADD_NEW_POST })\nexport const oneByOneCharachtersEnteringActionCreator = (desiredValue) => ({ type: ONE_BY_ONE_CHARACHTERS_ENTERING, desiredValue: desiredValue })"],"mappings":"AAAA,MAAMA,YAAY,GAAG,cAArB;AACA,MAAMC,+BAA+B,GAAG,iCAAxC;AAEA,MAAMC,YAAY,GAAG;EACjBC,KAAK,EAAE,EADU;EAEjBC,sBAAsB,EAAE;AAFP,CAArB;AAMA,OAAO,MAAMC,cAAc,GAAG,YAAkC;EAAA,IAAjCC,KAAiC,uEAAzBJ,YAAyB;EAAA,IAAXK,MAAW;;EAC5D,QAAQA,MAAM,CAACC,IAAf;IACI,KAAKP,+BAAL;MACI,OAAO,EACH,GAAGK,KADA;QAEHF,sBAAsB,EAAEG,MAAM,CAACE;MAF5B,CAAP;;IAIJ,KAAKT,YAAL;MACI,IAAIU,KAAK,GAAGJ,KAAK,CAACH,KAAN,CAAYQ,MAAxB;MACA,IAAIC,IAAI,GAAG;QACPC,EAAE,EAAEH,KADG;QAEPI,IAAI,EAAER,KAAK,CAACF,sBAFL;QAGPW,QAAQ,EAAE;MAHH,CAAX;MAKA,OAAO,EACH,GAAGT,KADA;QAEHH,KAAK,EAAE,CAAC,GAAGG,KAAK,CAACH,KAAV,EAAiBS,IAAjB,CAFJ;QAGHR,sBAAsB,EAAE;MAHrB,CAAP;;IAKA,KAAKY,SAAL;MACI,OAAO,EACH,GAAGV,KADA;QAEHH,KAAK,EAAE,GAAGc;MAFP,CAAP;;IAIR;MACI,OAAOX,KAAP;EAxBR;AA0BH,CA3BM;KAAMD,c;AA6Bb,OAAO,MAAMa,uBAAuB,GAAG,OAAO;EAAEV,IAAI,EAAER;AAAR,CAAP,CAAhC;AACP,OAAO,MAAMmB,wCAAwC,GAAIV,YAAD,KAAmB;EAAED,IAAI,EAAEP,+BAAR;EAAyCQ,YAAY,EAAEA;AAAvD,CAAnB,CAAjD"},"metadata":{},"sourceType":"module"}