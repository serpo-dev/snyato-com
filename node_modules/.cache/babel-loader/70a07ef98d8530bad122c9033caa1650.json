{"ast":null,"code":"import chats from './data/inboxItems.json';\nconst ONE_BY_ONE_CHARACHTERS_ENTERING = 'ONE-BY-ONE-CHARACHTERS-ENTERING';\nconst ADD_NEW_MESSAGE = 'ADD-NEW-MESSAGE';\nconst initialState = {\n  users: chats,\n  messages: [{\n    id: 1,\n    text: \"- It's not easy to live your own way.\"\n  }, {\n    id: 2,\n    text: \"Because you can't blame anybody but yourself.\"\n  }, {\n    id: 3,\n    text: \"- I don't want to be a burden! I want to be useful.\"\n  }],\n  currentValueOfTextArea: ''\n};\nexport let InboxReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  let stateCopy = { ...state,\n    currentValueOfTextArea: { ...state.currentValueOfTextArea\n    }\n  };\n\n  switch (action.type) {\n    case ONE_BY_ONE_CHARACHTERS_ENTERING:\n      stateCopy.currentValueOfTextArea = action.desiredValue;\n      return stateCopy;\n\n    case ADD_NEW_MESSAGE:\n      let count = state.messages.length;\n      let item = {\n        id: count + 1,\n        text: state.currentValueOfTextArea\n      };\n      stateCopy.messages = [...state.messages, item];\n      stateCopy.currentValueOfTextArea = '';\n      return stateCopy;\n\n    default:\n      return state;\n  }\n};\n_c = InboxReducer;\nexport let addNewMessageActionCreator = () => ({\n  type: ADD_NEW_MESSAGE\n});\nexport let oneByOneCharachtersEnteringActionCreator = desiredValue => ({\n  type: ONE_BY_ONE_CHARACHTERS_ENTERING,\n  desiredValue: desiredValue\n});\n\nvar _c;\n\n$RefreshReg$(_c, \"InboxReducer\");","map":{"version":3,"names":["chats","ONE_BY_ONE_CHARACHTERS_ENTERING","ADD_NEW_MESSAGE","initialState","users","messages","id","text","currentValueOfTextArea","InboxReducer","state","action","stateCopy","type","desiredValue","count","length","item","addNewMessageActionCreator","oneByOneCharachtersEnteringActionCreator"],"sources":["/home/sergey/Documents/live-catcher/src/redux/InboxReducer.js"],"sourcesContent":["import chats from './data/inboxItems.json';\n\n\n\nconst ONE_BY_ONE_CHARACHTERS_ENTERING = 'ONE-BY-ONE-CHARACHTERS-ENTERING';\nconst ADD_NEW_MESSAGE = 'ADD-NEW-MESSAGE';\n\nconst initialState = {\n    users: chats,\n    messages: [\n        {\n            id: 1,\n            text: \"- It's not easy to live your own way.\"\n        },\n        {\n            id: 2,\n            text: \"Because you can't blame anybody but yourself.\"\n        },\n        {\n            id: 3,\n            text: \"- I don't want to be a burden! I want to be useful.\"\n        }\n    ],\n    currentValueOfTextArea: ''\n}\n\nexport let InboxReducer = (state = initialState, action) => {\n    let stateCopy = {\n        ...state,\n        currentValueOfTextArea: { ...state.currentValueOfTextArea }\n    }\n    switch (action.type) {\n        case ONE_BY_ONE_CHARACHTERS_ENTERING:\n                stateCopy.currentValueOfTextArea = action.desiredValue;\n                return stateCopy;\n        case ADD_NEW_MESSAGE:\n                let count = state.messages.length;\n                let item = {\n                    id: count + 1,\n                    text: state.currentValueOfTextArea\n                };\n                stateCopy.messages = [...state.messages, item];\n                stateCopy.currentValueOfTextArea = '';\n                return stateCopy;\n        default:\n            return state;\n    }\n}\n\n\nexport let addNewMessageActionCreator = () => ({ type: ADD_NEW_MESSAGE })\nexport let oneByOneCharachtersEnteringActionCreator = (desiredValue) => ({ type: ONE_BY_ONE_CHARACHTERS_ENTERING, desiredValue: desiredValue })"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,wBAAlB;AAIA,MAAMC,+BAA+B,GAAG,iCAAxC;AACA,MAAMC,eAAe,GAAG,iBAAxB;AAEA,MAAMC,YAAY,GAAG;EACjBC,KAAK,EAAEJ,KADU;EAEjBK,QAAQ,EAAE,CACN;IACIC,EAAE,EAAE,CADR;IAEIC,IAAI,EAAE;EAFV,CADM,EAKN;IACID,EAAE,EAAE,CADR;IAEIC,IAAI,EAAE;EAFV,CALM,EASN;IACID,EAAE,EAAE,CADR;IAEIC,IAAI,EAAE;EAFV,CATM,CAFO;EAgBjBC,sBAAsB,EAAE;AAhBP,CAArB;AAmBA,OAAO,IAAIC,YAAY,GAAG,YAAkC;EAAA,IAAjCC,KAAiC,uEAAzBP,YAAyB;EAAA,IAAXQ,MAAW;EACxD,IAAIC,SAAS,GAAG,EACZ,GAAGF,KADS;IAEZF,sBAAsB,EAAE,EAAE,GAAGE,KAAK,CAACF;IAAX;EAFZ,CAAhB;;EAIA,QAAQG,MAAM,CAACE,IAAf;IACI,KAAKZ,+BAAL;MACQW,SAAS,CAACJ,sBAAV,GAAmCG,MAAM,CAACG,YAA1C;MACA,OAAOF,SAAP;;IACR,KAAKV,eAAL;MACQ,IAAIa,KAAK,GAAGL,KAAK,CAACL,QAAN,CAAeW,MAA3B;MACA,IAAIC,IAAI,GAAG;QACPX,EAAE,EAAES,KAAK,GAAG,CADL;QAEPR,IAAI,EAAEG,KAAK,CAACF;MAFL,CAAX;MAIAI,SAAS,CAACP,QAAV,GAAqB,CAAC,GAAGK,KAAK,CAACL,QAAV,EAAoBY,IAApB,CAArB;MACAL,SAAS,CAACJ,sBAAV,GAAmC,EAAnC;MACA,OAAOI,SAAP;;IACR;MACI,OAAOF,KAAP;EAdR;AAgBH,CArBM;KAAID,Y;AAwBX,OAAO,IAAIS,0BAA0B,GAAG,OAAO;EAAEL,IAAI,EAAEX;AAAR,CAAP,CAAjC;AACP,OAAO,IAAIiB,wCAAwC,GAAIL,YAAD,KAAmB;EAAED,IAAI,EAAEZ,+BAAR;EAAyCa,YAAY,EAAEA;AAAvD,CAAnB,CAA/C"},"metadata":{},"sourceType":"module"}