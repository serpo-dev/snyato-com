{"ast":null,"code":"import chats from './redux/data/inboxItems.json';\nexport let stack = {\n  _state: {\n    Inbox: {\n      InboxItems: chats,\n      InboxMessages: [{\n        id: \"1\",\n        text: \"- It's not easy to live your own way.\"\n      }, {\n        id: \"2\",\n        text: \"Because you can't blame anybody but yourself.\"\n      }, {\n        id: \"3\",\n        text: \"- I don't want to be a burden! I want to be useful.\"\n      }]\n    }\n  },\n  defaultText: 'Write here what you want to say...',\n\n  subscriber(observer) {\n    this.Reload = observer;\n  },\n\n  singleCharacterEnter(updatedString) {\n    this.defaultText = updatedString;\n    this.Reload(this._state);\n  },\n\n  addMessage(message) {\n    let count = this._state.Inbox.InboxMessages.length;\n    this._state.Inbox.InboxMessages[count] = {\n      id: `${count + 1}`,\n      text: `${message}`\n    };\n    this.defaultText = '';\n    this.Reload(this._state);\n  },\n\n  Reload() {},\n\n  getState() {\n    return this._state;\n  },\n\n  getDefaultText() {\n    return this.defaultText;\n  }\n\n};","map":{"version":3,"names":["chats","stack","_state","Inbox","InboxItems","InboxMessages","id","text","defaultText","subscriber","observer","Reload","singleCharacterEnter","updatedString","addMessage","message","count","length","getState","getDefaultText"],"sources":["/home/sergey/Documents/live-catcher/src/state.js"],"sourcesContent":["import chats from './redux/data/inboxItems.json';\n\n\nexport let stack = {\n    _state: {\n        Inbox: {\n            InboxItems: chats,\n            InboxMessages: [\n                {\n                    id: \"1\",\n                    text: \"- It's not easy to live your own way.\"\n                },\n                {\n                    id: \"2\",\n                    text: \"Because you can't blame anybody but yourself.\"\n                },\n                {\n                    id: \"3\",\n                    text: \"- I don't want to be a burden! I want to be useful.\"\n                }\n            ]\n        }\n    },\n    defaultText: 'Write here what you want to say...',\n    subscriber(observer) {\n        this.Reload = observer;\n    },\n    singleCharacterEnter(updatedString) {\n        this.defaultText = updatedString;\n        this.Reload(this._state);\n    },\n    addMessage(message) {\n        let count = this._state.Inbox.InboxMessages.length;\n        this._state.Inbox.InboxMessages[count] = { id: `${count + 1}`, text: `${message}` };\n        this.defaultText = '';\n        this.Reload(this._state);\n    },\n    Reload() { },\n    getState() {\n        return this._state;\n    },\n    getDefaultText() {\n        return this.defaultText; \n    }\n}"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,8BAAlB;AAGA,OAAO,IAAIC,KAAK,GAAG;EACfC,MAAM,EAAE;IACJC,KAAK,EAAE;MACHC,UAAU,EAAEJ,KADT;MAEHK,aAAa,EAAE,CACX;QACIC,EAAE,EAAE,GADR;QAEIC,IAAI,EAAE;MAFV,CADW,EAKX;QACID,EAAE,EAAE,GADR;QAEIC,IAAI,EAAE;MAFV,CALW,EASX;QACID,EAAE,EAAE,GADR;QAEIC,IAAI,EAAE;MAFV,CATW;IAFZ;EADH,CADO;EAoBfC,WAAW,EAAE,oCApBE;;EAqBfC,UAAU,CAACC,QAAD,EAAW;IACjB,KAAKC,MAAL,GAAcD,QAAd;EACH,CAvBc;;EAwBfE,oBAAoB,CAACC,aAAD,EAAgB;IAChC,KAAKL,WAAL,GAAmBK,aAAnB;IACA,KAAKF,MAAL,CAAY,KAAKT,MAAjB;EACH,CA3Bc;;EA4BfY,UAAU,CAACC,OAAD,EAAU;IAChB,IAAIC,KAAK,GAAG,KAAKd,MAAL,CAAYC,KAAZ,CAAkBE,aAAlB,CAAgCY,MAA5C;IACA,KAAKf,MAAL,CAAYC,KAAZ,CAAkBE,aAAlB,CAAgCW,KAAhC,IAAyC;MAAEV,EAAE,EAAG,GAAEU,KAAK,GAAG,CAAE,EAAnB;MAAsBT,IAAI,EAAG,GAAEQ,OAAQ;IAAvC,CAAzC;IACA,KAAKP,WAAL,GAAmB,EAAnB;IACA,KAAKG,MAAL,CAAY,KAAKT,MAAjB;EACH,CAjCc;;EAkCfS,MAAM,GAAG,CAAG,CAlCG;;EAmCfO,QAAQ,GAAG;IACP,OAAO,KAAKhB,MAAZ;EACH,CArCc;;EAsCfiB,cAAc,GAAG;IACb,OAAO,KAAKX,WAAZ;EACH;;AAxCc,CAAZ"},"metadata":{},"sourceType":"module"}