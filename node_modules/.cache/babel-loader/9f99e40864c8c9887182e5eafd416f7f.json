{"ast":null,"code":"import chats from './redux/data/inboxItems.json'; // add message from the Inbox to the state database\n\nexport let addMessage = message => {\n  let count = state.Inbox.InboxMessages.length;\n  state.Inbox.InboxMessages[count] = {\n    id: `${count + 1}`,\n    text: `${message}`\n  };\n};\nexport let defaultText = 'Write here what you want to say...';\nexport let singleCharacterEnter = updatedString => {\n  defaultText = updatedString;\n};\nexport let bridge = '';\nexport let state = {\n  Inbox: {\n    InboxItems: chats,\n    InboxMessages: [{\n      id: \"1\",\n      text: \"- It's not easy to live your own way.\"\n    }, {\n      id: \"2\",\n      text: \"Because you can't blame anybody but yourself.\"\n    }, {\n      id: \"3\",\n      text: \"- I don't want to be a burden! I want to be useful.\"\n    }]\n  }\n};","map":{"version":3,"names":["chats","addMessage","message","count","state","Inbox","InboxMessages","length","id","text","defaultText","singleCharacterEnter","updatedString","bridge","InboxItems"],"sources":["/home/sergey/Documents/live-catcher/src/state.js"],"sourcesContent":["import chats from './redux/data/inboxItems.json';\n\n\n// add message from the Inbox to the state database\n\nexport let addMessage = (message) => {\n    let count = state.Inbox.InboxMessages.length;\n    state.Inbox.InboxMessages[count] = { id: `${count + 1}`, text: `${message}` }\n}\n\nexport let defaultText = 'Write here what you want to say...';\nexport let singleCharacterEnter = (updatedString) => {\n    defaultText = updatedString;\n}\n\nexport let bridge = ''\n\n\n\nexport let state = {\n    Inbox: {\n        InboxItems: chats,\n        InboxMessages: [\n            {\n                id: \"1\",\n                text: \"- It's not easy to live your own way.\"\n            },\n            {\n                id: \"2\",\n                text: \"Because you can't blame anybody but yourself.\"\n            },\n            {\n                id: \"3\",\n                text: \"- I don't want to be a burden! I want to be useful.\"\n            }\n        ]\n    }\n}"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,8BAAlB,C,CAGA;;AAEA,OAAO,IAAIC,UAAU,GAAIC,OAAD,IAAa;EACjC,IAAIC,KAAK,GAAGC,KAAK,CAACC,KAAN,CAAYC,aAAZ,CAA0BC,MAAtC;EACAH,KAAK,CAACC,KAAN,CAAYC,aAAZ,CAA0BH,KAA1B,IAAmC;IAAEK,EAAE,EAAG,GAAEL,KAAK,GAAG,CAAE,EAAnB;IAAsBM,IAAI,EAAG,GAAEP,OAAQ;EAAvC,CAAnC;AACH,CAHM;AAKP,OAAO,IAAIQ,WAAW,GAAG,oCAAlB;AACP,OAAO,IAAIC,oBAAoB,GAAIC,aAAD,IAAmB;EACjDF,WAAW,GAAGE,aAAd;AACH,CAFM;AAIP,OAAO,IAAIC,MAAM,GAAG,EAAb;AAIP,OAAO,IAAIT,KAAK,GAAG;EACfC,KAAK,EAAE;IACHS,UAAU,EAAEd,KADT;IAEHM,aAAa,EAAE,CACX;MACIE,EAAE,EAAE,GADR;MAEIC,IAAI,EAAE;IAFV,CADW,EAKX;MACID,EAAE,EAAE,GADR;MAEIC,IAAI,EAAE;IAFV,CALW,EASX;MACID,EAAE,EAAE,GADR;MAEIC,IAAI,EAAE;IAFV,CATW;EAFZ;AADQ,CAAZ"},"metadata":{},"sourceType":"module"}