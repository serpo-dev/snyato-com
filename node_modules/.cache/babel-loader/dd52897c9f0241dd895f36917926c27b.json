{"ast":null,"code":"var _jsxFileName = \"/home/sergey/Documents/live-catcher/src/components/sections/Pages/HomeContainer/HomeContainer.js\";\nimport React from 'react';\nimport { setPosts, switchSection } from '../../../../redux/HomeReducer';\nimport { isFetchingToggle } from '../../../../redux/CommonElementsReducer';\nimport Post from '../ProfileContainer/Profile/Post/Post';\nimport Home from './Home/Home';\nimport { connect } from 'react-redux';\nimport * as axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass HomeAPIContainer extends React.Component {\n  componentDidMount() {\n    // load data at the start from db.json\n    this.props.callIsFetchingToggle(true);\n    axios.get(\"http://localhost:3001/posts\").then(response => {\n      this.props.callIsFetchingToggle(false);\n      this.props.callSetPosts(response.data);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Home, {\n      posts: this.props.posts,\n      isFetching: this.props.isFetching,\n      switchSection: this.props.callSwitchSection,\n      isFetchingToggle: this.props.isFetchingToggle,\n      setPosts: this.props.setPosts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    posts: state.Home.posts.map((post, i) => /*#__PURE__*/_jsxDEV(Post, {\n      text: post.text\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 50\n    }, this)).reverse(),\n    isFetching: state.CommonElements.isFetching\n  };\n}; // let mapDispatchToProps = (dispatch) => {\n//     return {\n//         callSwitchSection: (sectionName) => {\n//             dispatch(switchSection(sectionName))\n//         },\n//         callIsFetchingToggle: (isFetching) => {\n//             dispatch(isFetchingToggle(isFetching))\n//         },\n//         callSetPosts: (newPosts) => {\n//             dispatch(setPosts(newPosts))\n//         }\n//     }\n// }\n\n\nconst HomeContainer = connect(mapStateToProps, {\n  switchSection: switchSection,\n  isFetchingToggle: isFetchingToggle,\n  setPosts: setPosts\n})(HomeAPIContainer);\nexport default HomeContainer;","map":{"version":3,"names":["React","setPosts","switchSection","isFetchingToggle","Post","Home","connect","axios","HomeAPIContainer","Component","componentDidMount","props","callIsFetchingToggle","get","then","response","callSetPosts","data","render","posts","isFetching","callSwitchSection","mapStateToProps","state","map","post","i","text","reverse","CommonElements","HomeContainer"],"sources":["/home/sergey/Documents/live-catcher/src/components/sections/Pages/HomeContainer/HomeContainer.js"],"sourcesContent":["import React from 'react'\nimport { setPosts, switchSection } from '../../../../redux/HomeReducer'\nimport { isFetchingToggle } from '../../../../redux/CommonElementsReducer'\nimport Post from '../ProfileContainer/Profile/Post/Post'\nimport Home from './Home/Home'\nimport { connect } from 'react-redux'\nimport * as axios from 'axios'\n\n\nclass HomeAPIContainer extends React.Component {\n\n    componentDidMount() {\n\n        // load data at the start from db.json\n\n        this.props.callIsFetchingToggle(true)\n\n        axios\n            .get(\"http://localhost:3001/posts\")\n            .then(response => {\n                this.props.callIsFetchingToggle(false)\n                this.props.callSetPosts(response.data)\n            });\n    }\n\n\n    render() {\n\n        return (\n            <Home\n                posts={this.props.posts}\n                isFetching={this.props.isFetching}\n                switchSection={this.props.callSwitchSection}\n                isFetchingToggle={this.props.isFetchingToggle}\n                setPosts={this.props.setPosts}\n            />\n        )\n\n    }\n}\n\n\n\nlet mapStateToProps = (state) => {\n    return {\n        posts: state.Home.posts.map((post, i) => <Post key={i} text={post.text} />).reverse(),\n        isFetching: state.CommonElements.isFetching\n    }\n}\n\n// let mapDispatchToProps = (dispatch) => {\n//     return {\n//         callSwitchSection: (sectionName) => {\n//             dispatch(switchSection(sectionName))\n//         },\n//         callIsFetchingToggle: (isFetching) => {\n//             dispatch(isFetchingToggle(isFetching))\n//         },\n//         callSetPosts: (newPosts) => {\n//             dispatch(setPosts(newPosts))\n//         }\n//     }\n// }\n\nconst HomeContainer = connect(mapStateToProps,\n    {\n        switchSection: switchSection,\n        isFetchingToggle: isFetchingToggle,\n        setPosts: setPosts\n    }\n)(HomeAPIContainer)\n\n\nexport default HomeContainer;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,aAAnB,QAAwC,+BAAxC;AACA,SAASC,gBAAT,QAAiC,yCAAjC;AACA,OAAOC,IAAP,MAAiB,uCAAjB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;;;AAGA,MAAMC,gBAAN,SAA+BR,KAAK,CAACS,SAArC,CAA+C;EAE3CC,iBAAiB,GAAG;IAEhB;IAEA,KAAKC,KAAL,CAAWC,oBAAX,CAAgC,IAAhC;IAEAL,KAAK,CACAM,GADL,CACS,6BADT,EAEKC,IAFL,CAEUC,QAAQ,IAAI;MACd,KAAKJ,KAAL,CAAWC,oBAAX,CAAgC,KAAhC;MACA,KAAKD,KAAL,CAAWK,YAAX,CAAwBD,QAAQ,CAACE,IAAjC;IACH,CALL;EAMH;;EAGDC,MAAM,GAAG;IAEL,oBACI,QAAC,IAAD;MACI,KAAK,EAAE,KAAKP,KAAL,CAAWQ,KADtB;MAEI,UAAU,EAAE,KAAKR,KAAL,CAAWS,UAF3B;MAGI,aAAa,EAAE,KAAKT,KAAL,CAAWU,iBAH9B;MAII,gBAAgB,EAAE,KAAKV,KAAL,CAAWR,gBAJjC;MAKI,QAAQ,EAAE,KAAKQ,KAAL,CAAWV;IALzB;MAAA;MAAA;MAAA;IAAA,QADJ;EAUH;;AA7B0C;;AAkC/C,IAAIqB,eAAe,GAAIC,KAAD,IAAW;EAC7B,OAAO;IACHJ,KAAK,EAAEI,KAAK,CAAClB,IAAN,CAAWc,KAAX,CAAiBK,GAAjB,CAAqB,CAACC,IAAD,EAAOC,CAAP,kBAAa,QAAC,IAAD;MAAc,IAAI,EAAED,IAAI,CAACE;IAAzB,GAAWD,CAAX;MAAA;MAAA;MAAA;IAAA,QAAlC,EAAqEE,OAArE,EADJ;IAEHR,UAAU,EAAEG,KAAK,CAACM,cAAN,CAAqBT;EAF9B,CAAP;AAIH,CALD,C,CAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAMU,aAAa,GAAGxB,OAAO,CAACgB,eAAD,EACzB;EACIpB,aAAa,EAAEA,aADnB;EAEIC,gBAAgB,EAAEA,gBAFtB;EAGIF,QAAQ,EAAEA;AAHd,CADyB,CAAP,CAMpBO,gBANoB,CAAtB;AASA,eAAesB,aAAf"},"metadata":{},"sourceType":"module"}